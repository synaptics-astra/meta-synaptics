SYNA_SDK_PATH := "${@os.path.abspath(os.path.dirname(d.getVar('FILE', True)) + '/../..')}/syna-release"

SYNA_SRC_TA_ENC = "file://${SYNA_SDK_PATH}/ta_enc"
SYNA_SRC_DEMOS = "file://${SYNA_SDK_PATH}/application/demos"
SYNA_SRC_GSTREAMER = "file://${SYNA_SDK_PATH}/application/gstreamer-plugins-syna"
SYNA_SRC_BOOT = "file://${SYNA_SDK_PATH}/boot"
SYNA_SRC_UBOOT = "file://${SYNA_SDK_PATH}/boot/u-boot_2019_10"
SYNA_SRC_PREBOOT = "file://${SYNA_SDK_PATH}/boot/preboot/prebuilts"
SYNA_SRC_BUILD = "file://${SYNA_SDK_PATH}/build"
SYNA_SRC_CONFIGS = "file://${SYNA_SDK_PATH}/configs"
SYNA_SRC_EXTERNAL = "file://${SYNA_SDK_PATH}/external"
SYNA_SRC_FACTORY = "file://${SYNA_SDK_PATH}/factory"
SYNA_SRC_FW_ENC = "file://${SYNA_SDK_PATH}/fw_enc"
SYNA_SRC_LINUX_5_15 = "file://${SYNA_SDK_PATH}/linux_5_15/main"
SYNA_SRC_LINUX_5_15_OVERLAY = "file://${SYNA_SDK_PATH}/linux_5_15/overlay"
SYNA_SRC_LINUX_5_15_MODULES = "file://${SYNA_SDK_PATH}/linux_5_15/modules"
SYNA_SRC_SECURITY = "file://${SYNA_SDK_PATH}/security"
SYNA_SRC_FRAMEWORK = "file://${SYNA_SDK_PATH}/synap/framework"
SYNA_SRC_SYNAP_RELEASE = "file://${SYNA_SDK_PATH}/synap/release"
SYNA_SRC_SYNAP_DRIVER = "file://${SYNA_SDK_PATH}/synap/vsi_npu_driver"
SYNA_SRC_LINUX_SYSROOT = "file://${SYNA_SDK_PATH}/sysroot/linux-baseline"
SYNA_SRC_TA_ENC = "file://${SYNA_SDK_PATH}/ta_enc"
SYNA_SRC_TEE = "file://${SYNA_SDK_PATH}/tee"
SYNA_SRC_OPTEE_DEV = "file://${SYNA_SDK_PATH}/tee/optee_dev"
SYNA_SRC_V4L2ISP = "file://${SYNA_SDK_PATH}/application/v4l2isp"

SYNA_SOURCE_PREFIX = "${SYNA_SDK_PATH}"

SYNA_MODULES_SOURCE_PREFIX = "${SYNA_SOURCE_PREFIX}/linux_5_15/modules"

SRCPV ?= "local"

# we check out the kernel in the git directory and point S there by default because
# the kernel-yocto class expects the sources to be in that subdirectory when fetched from git
# but here we will have it in a different path since we fetch from file://
S:pn-linux-syna = "${WORKDIR}/${SYNA_SOURCE_PREFIX}/linux_5_15/main"
